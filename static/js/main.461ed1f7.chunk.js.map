{"version":3,"sources":["components/Input/Input.js","components/Card/Card.js","components/Button/Button.js","actions/actionTypes.js","config.js","actions/index.js","history.js","components/SearchForm/SearchForm.js","components/SearchResults/SearchResults.js","components/App/App.js","reducers/imageSearch.js","reducers/index.js","reducers/searchQuery.js","index.js","Root.js"],"names":["Input","_ref","label","value","onChange","react_default","a","createElement","className","Card","props","children","Button","onClick","concat","SEARCH_IMAGES","CLEAR_SEARCH","SAVE_QUERY","PIXABAY_API_KEY","searchImages","query","url","request","axios","get","type","payload","clearSearch","saveQuery","createBrowserHistory","SearchForm","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","bind","assertThisInitialized","onInputChange","history","push","setState","event","target","components_Card_Card","style","width","components_Input_Input","components_Button_Button","Component","connect","dispatch","bindActionCreators","SearchResults","images","nextProps","map","image","key","id","src","largeImageURL","alt","length","renderImages","renderLoader","withRouter","Switch","Route","path","component","initialState","rootReducer","combineReducers","arguments","undefined","action","toConsumableArray","data","hits","ReactDOM","render","_ref$initialState","store","createStore","applyMiddleware","reduxPromise","es","Router","components_App_App","document","querySelector"],"mappings":"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","file":"static/js/main.461ed1f7.chunk.js","sourcesContent":["import React from 'react';\nimport './styles.scss';\n\nconst Input = ({\n                 label, value, onChange,\n               }) => {\n  return (\n    <div className=\"input--container\">\n      <label className=\"label\">{label}</label>\n      <input\n        value={value}\n        onChange={onChange}\n        className=\"input\"\n      />\n    </div>\n  );\n};\n\nexport default Input;","import React from 'react';\nimport './styles.scss';\n\nconst Card = (props) => {\n  return (\n    <div className='card--background'>\n      <div className='card--container'>\n        {props.children}\n      </div>\n    </div>\n  );\n};\n\nexport default Card;\n","import React from 'react';\nimport './styles.scss';\n\nconst Button = ({ onClick, children, className }) => {\n  return (\n    <button onClick={onClick} className={`button ${className}`}>\n      <span className=\"button--text\">\n        {children}\n      </span>\n    </button>\n  );\n};\n\nexport default Button;\n","export const SEARCH_IMAGES = 'SEARCH_IMAGES';\nexport const CLEAR_SEARCH = 'CLEAR_SEARCH';\nexport const SAVE_QUERY = 'SAVE_QUERY';","export const PIXABAY_API_KEY = '10387711-e3afa06406079b212317b03d4';","import axios from 'axios';\nimport {CLEAR_SEARCH, SAVE_QUERY, SEARCH_IMAGES} from \"./actionTypes\";\nimport { PIXABAY_API_KEY} from \"../config\";\n\nexport function searchImages(query) {\n  const url = `https://pixabay.com/api/?key=${PIXABAY_API_KEY}&q=${query}&image_type=photo&per_page=6`;\n  const request = axios.get(url); //Returns a promise\n  return {\n    type: SEARCH_IMAGES,\n    payload: request\n  };\n}\n\nexport function clearSearch() {\n  return {\n    type: CLEAR_SEARCH,\n  };\n}\n\nexport function saveQuery(query) {\n  return {\n    type: SAVE_QUERY,\n    payload: query\n  };\n}","import { createBrowserHistory } from \"history\";\n\nexport default createBrowserHistory();","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport Input from \"../Input/Input\";\nimport Card from \"../Card/Card\";\nimport Button from '../Button/Button';\nimport { saveQuery } from \"../../actions\";\nimport history from '../../history';\nimport './styles.scss';\n\nclass SearchForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n     query: ''\n    };\n\n    this.onClick = this.onClick.bind(this);\n    this.onInputChange = this.onInputChange.bind(this);\n  }\n\n  onClick() {\n    if (this.state.query !== '') {\n      this.props.saveQuery(this.state.query);\n      history.push(`/search_results/q=${this.state.query}`);\n      this.setState({ query: ''});\n    }\n  }\n\n  onInputChange(event) {\n    const value = event.target.value;\n    this.setState({ query: value });\n  }\n\n  render() {\n    return (\n      <Card>\n       <div style={{width: '100%'}}>\n         <h1 className=\"text\">Search for images</h1>\n         <div>\n           <Input\n             label=\"Search keyword\"\n             value={this.state.query}\n             onChange={this.onInputChange}\n           />\n         </div>\n         <div>\n           <Button\n             onClick={this.onClick}\n             className=\"button--fill\"\n           >\n             Search\n           </Button>\n         </div>\n       </div>\n      </Card>\n    );\n  }\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return (\n    bindActionCreators({\n      saveQuery\n    }, dispatch)\n  );\n}\n\nexport default connect(null, mapDispatchToProps)(SearchForm);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Card from \"../Card/Card\";\nimport Button from '../Button/Button';\nimport { bindActionCreators } from \"redux\";\nimport { clearSearch, searchImages } from \"../../actions\";\nimport history from '../../history';\nimport './styles.scss';\n\nclass SearchResults extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { images: this.props.images };\n\n    this.onClick = this.onClick.bind(this);\n  }\n\n  componentDidMount() {\n    this.props.searchImages(this.props.query);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.images !== this.props.images) {\n      this.setState({images: nextProps.images});\n    }\n  }\n\n  onClick() {\n    this.props.clearSearch();\n    history.push('/');\n  }\n\n  renderImages() {\n    return this.state.images.map((image) => {\n      return (\n        <img\n          key={image.id}\n          src={image.largeImageURL}\n          alt=''\n          className=\"thumbnail\"\n        />)\n    })\n  }\n\n  renderLoader() {\n    if (this.state.images.length > 0) {\n     return (\n         <Button\n           onClick={this.onClick}\n           className=\"button--outline\"\n         >\n           Search Again\n         </Button>\n       )\n    } else {\n      return <p className=\"loader\">Loading</p>\n    }\n  }\n\n  render() {\n\n    return (\n      <Card>\n        <div>\n          <h1 className=\"text\">Search results</h1>\n          <div className=\"grid\">\n            {this.renderImages()}\n          </div>\n          <div>\n            {this.renderLoader()}\n          </div>\n        </div>\n      </Card>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    images: state.images,\n    query: state.query\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return (\n    bindActionCreators({\n      clearSearch, searchImages\n    }, dispatch)\n  );\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SearchResults);\n","import React from 'react';\nimport SearchForm from '../SearchForm/SearchForm';\nimport SearchResults from \"../SearchResults/SearchResults\";\nimport \"typeface-roboto\";\nimport { Route, Switch, withRouter } from 'react-router-dom';\nimport './styles.scss';\n\nconst App = () => {\n  return (\n    <div className=\"app--container\">\n      <Switch>\n        <Route\n          path=\"/search_results/q=:query\"\n          component={SearchResults}\n        />\n        <Route\n          path=\"/\"\n          component={SearchForm}\n        />\n      </Switch>\n    </div>\n  );\n};\n\nexport default withRouter(App);","import {CLEAR_SEARCH, SEARCH_IMAGES} from '../actions/actionTypes';\n\nconst initialState = [];\n\nexport default function(state = initialState, action) {\n  switch(action.type) {\n    case SEARCH_IMAGES:\n      return [...state, ...action.payload.data.hits];\n    case CLEAR_SEARCH:\n      return initialState;\n    default:\n      return state;\n  }\n}","import { combineReducers } from 'redux';\nimport images from './imageSearch';\nimport query from './searchQuery';\n\nconst rootReducer = combineReducers({\n  images, query\n});\n\nexport default rootReducer;","import { CLEAR_SEARCH, SAVE_QUERY } from '../actions/actionTypes';\n\nconst initialState = '';\n\nexport default function(state = initialState, action) {\n  switch(action.type) {\n    case SAVE_QUERY:\n      return action.payload;\n    case CLEAR_SEARCH:\n      return initialState;\n    default:\n      return state;\n  }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Router } from 'react-router-dom';\nimport App from './components/App/App';\nimport Root from './Root';\nimport history from './history';\n\nReactDOM.render(\n  <Root>\n    <Router history={history}>\n      <App />\n    </Router>\n  </Root>,\n  document.querySelector('#root')\n);","import React from 'react';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport reduxPromise from 'redux-promise';\nimport rootReducer from './reducers';\n\nexport default ({ children, initialState = {} }) => {\n  const store = createStore(\n    rootReducer,\n    initialState,\n    applyMiddleware(reduxPromise)\n  );\n\n  return <Provider store={store}>{children}</Provider>;\n}\n"],"sourceRoot":""}